# Ruby on Rails c нуля (2015) [Базовый]\Занятие 06 Исключения 
# справочник и онлайн тестер регулярных выражений  https://rubular.com/    00:49:50

# пример проверок с помощью регулярных выражений regexp
# к примеру задаем образец строки шаблоном
# наш пример будет проверять соответствие формату

# примеры:
 regexp1 = /.+/  	#точка означает либой символ, + означает как минимум один символ
# regexp2 = /.*/  	можно поставить * она означает 0 либо один символ

#!!!!! для сравнения строки на соответствие шаблону используется =~ regexp 
# пример1:
# '' =~ regexp1     тут проверям соответствует ли строка регулярному выражению regexp1 (нет, не соответствует, т.к regexp1 подразумевает как минимум 1 символ)  
					# потому эта проверка возвращает nil

# если сделать так:
#'a' =~ regexp1       #то вернется 0 Ноль - это позиция вхождения регулярного выражения в строку. В даном случае с начала строки


regexp3 = /\d+.+\d*/  # \d означает цифра + как минимум одна, как минимум один символ и одна цифра, но не обязательная  00:47:15
 '1d' =~ regexp3     # 1d соответствует шаблону и везвращает ноль. Потому что условие - в начале цифра, потом любой символ в любом кол-ве и потом еще не обязательно цифра


# Example: Does this look like an IP address?

#     # Note that this will also match some invalid IP address
#     # like 999.999.999.999, but in this case we just care about the format.
#     def ip_address?(str)
#       # We use !! to convert the return value to a boolean
#       !!(str =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/)
#     end
#     ip_address?("192.168.1.1")  # returns true
#     ip_address?("0000.0000")    # returns false
