# Ruby on Rails c нуля (2015) [Базовый]\Занятие 06 Исключения 00:50:30
# пример регулярное выражение для проверки формата номера авто 
# подробнее про регулярные выражения тут http://rubylearning.com/satishtalim/ruby_regular_expressions.html

# Условие - ода буква из русс алфавита, три цифры, две буквы. Ни до ни после никаких символов быть не должно

regexp1 = /^[а-яА-Я]{1}\d{3}[а-яА-Я]{2}$/i #  ^ - шаблон применяется с начала строки, т.е. до него никаких символов быть не должно
				  						 #	[а-яА-Я]{1}  - должен быть символ от а до я и от А до Я (в количестве 1) 
				  						 #	\d{3}        - цифра (в количестве 3) 
				  						 #	[а-яА-Я]{2}  - должен быть символ от а до я и от А до Я (в количестве 2)  
											 #  $            - означает конец строки
											 #  i 					 - модификатор - делает нечувствительным к регистру

# Проверяем, подходит или нет

p 'а333Мк' =~ regexp1

# Примечание - результат nil означает несоответствие. Шаблон не совпадает со строкой
# 		  	   результат 0 означает что соответствие начинается с нулевой позиции в строке 'a333mk'. Шаблон совпадает со строкой
#              результат false когда использован оператор !~ Шаблон совпадает со строкой
#              результат true когда использован оператор !~  Шаблон не совпадает со строкой  


# 
# !!!! отличие операторов проверки
# =~  проверка - сопадает ли?
# !~  проверка - не совпадает ли?


# !!!модификаторы 00:53:30
# пример:
regexp2 = /^[а-я]{1}\d{3}[а-я]{2}/i      # i после скобки делает выражение нечувствительным к регистру

p 'с444См' =~ regexp2

# ********************
# Ranges bigger than 9
#  If you want to match any number from 2 to 9 or the numbers 10 to 23 (inclusive),
#  you can use the regular expression  `/^(?:[2-9]|1[0-9]|2[0-3])$/` . Here's how it works:
 -  `^`  asserts the start of the string.
-  `(?: ... )`  is a non-capturing group that allows us to group multiple options together.
-  `[2-9]`  matches any digit from 2 to 9.
-  `1[0-9]`  matches any number from 10 to 19.
-  `2[0-3]`  matches any number from 20 to 23.
-  `$`  asserts the end of the string.
#  So, the revised regular expression  `/^(?:[2-9]|1[0-9]|2[0-3])$/`  will match any number from 2 to 9 or the numbers 10 to 23 (inclusive) at the beginning of a string.

# ******************
# Есть еще такой вариант, когда нужно проверить от 0 до 10
  # шаблон регулярки, котор соответствует картам с цифрами от 2 до 10 включительно. 
  # Проверяется, что первый символ карты - число в диапозоне от 0 до 9 или 10 
  NUM_CARD = /^[2-9]|10/
  # шаблон регулярки, котор соответствует всем тузам 
  # Проверяется, что первый символ карты - A
  A_CARD = /^A/
  # шаблон регулярки, котор соответствует картам с картинками 
  # Проверяется, что первый символ карты - J или Q или K 
  PIC_CARD = /^J|Q|K/

  cards = %w(A^ 2^ 3^ 4^ 5^ 6^ 7^ 8^ 9^ 10^ J^ Q^ K^
            A<3 2<3 3<3 4<3 5<3 6<3 7<3 8<3 9<3 10<3 J<3 Q<3 K<3
            A<> 2<> 3<> 4<> 5<> 6<> 7<> 8<> 9<> 10<> J<> Q<> K<>
            A+ 2+ 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ J+ Q+ K+)
