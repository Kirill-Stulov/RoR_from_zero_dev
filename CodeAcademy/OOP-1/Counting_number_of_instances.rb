# Ruby on Rails c нуля (2015) [Базовый]\Занятие 05. Методы класса, Модули и объектная модель Ruby 0:06:45
# пример реализации подсчета экземпляров класса через переменную класса
# 	т.е каждый раз когда мы инстанцируем новый объект, нужно чтобы некий глобальный счетчик для этого класса увеличивался

class Car
	# attr_reader :current_rpm	

	@@instances = 0       		# задаем переменную класса. Далее эту переменную при каждом вызове конструктора увеличиваем на 1    
									# ПЕРЕМЕННУЮ КЛАССА МОЖНО ИСПОЛЬЗОВАТЬ КАК ВНУТРИ МЕТОДОВ ТАК И СНАРУЖИ

	def self.instances           #метод класса объявляется через self.  # чтобы потом эту инфу о количестве экземпляров класса выводить, нужен метод класса (метод класса, потому что колво экземпляров нужно смотреть у класса, а не у объекта, потому что у объекта только один экземпляр)
		@@instances					# просто выводим значение переменной @@instances		
	end						

	def initialize
		@current_rpm = 0
		@@instances += 1         #при каждом вызове конструктора увеличиваем на 1
	end 							

	def start_engine
		start_engine! if engine_stopped?
	end

	def engine_stopped
		current_rpm.zero?
	end

	protected

	attr_writer :current_rpm

	def initial_rpm
		700
	end

	def start_engine!
		self.current_rpm = initial_rpm
	end

end

gr = Car.new
gr2 = Car.new

p Car.instances # => 2

# Нужно учитывать что подклассы оказвавют влияние на переменные базового класса.
# Если создать подкласс который наследуе от Car и содать его экземпляр, то у них у всех будет общее кол-ва экземпляров

	class Truck < Car

	end

	tr = Truck.new

	p Truck.instances # => 3

# Переменные класса разделяются между классами и всеми его подклассами
