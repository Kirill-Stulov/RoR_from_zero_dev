# Кроме инстанс-переменных и класс-переменных, в Ruby есть еще инстанс-переменные уровня класса (class level instance variables.) 
# или - переменная экземпляра, объявленная в теле класса
# Раз класс - это объект класса Class, то как у любого объекта у него могут быть инстанс-переменные. 
# Но при этом они задаются на уровне класса. Они похожи на переменные класса, но ими не являются и отличаются в поведении, например, 
# они не наследуются. При этом, они явялются довольно мощным и удобным инструментом и даже рекомендуются как замена обычным переменным класса.

# Подробнее об инстанс-переменных уровня класса можно прочитать здесь:

#     https://habrahabr.ru/post/111781/
#     http://thoughts.codegram.com/understanding-class-instance-variables-in-ruby/
#     http://www.railstips.org/blog/archives/2006/11/18/class-and-instance-variables-in-ruby/

1: class User
2:   @b = 1
3:   def a
4:     @a = 1
5:   end
6: end

# Строка 4 выполнится в экземпляре класса User, в объекте который мы создадим через User.new
# А строка 2 выполняется в экземпляре класса Class, в объекте который описывает класс User. 
#   этот объект создастся сразу после чтения интерпретатором класса User.
#   Само слово User это не что иное как консанта, значение которой объект типа Class. 
#   Этот объект описывает наш класс User. Именно к этому объекту относится переменная @b.    https://habr.com/ru/post/111781/

# ПРИМЕНЕНИЕ:
#   Что нам дают переменные экземпляра Class-уровня?

#   Они могут работать как личные переменные класса. 
#   В отличии от настоящих переменных класса, которые доступны во всех потомках и экземплярах под одним именем, 
#   наша переменная принадлежит только тому классу в контексте которого была объявлена.
